; ModuleID = '/g/g15/bolet1/workspace/lulesh-region-fix-correct/LULESH/lulesh-util.cc'
source_filename = "/g/g15/bolet1/workspace/lulesh-region-fix-correct/LULESH/lulesh-util.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%struct.cmdLineOpts = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.Domain = type { %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector.0", i32, i32, i32*, i32*, i32**, %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector.0", double*, double*, double*, double*, double*, double*, double*, double*, double*, %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, i32, double, double, double, double, double, double, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32, i32, i32, i32, i32, i32 }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" = type { double*, double*, double* }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [3 x i8] c"-i\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"Missing integer argument to -i\00", align 1
@.str.2 = private unnamed_addr constant [64 x i8] c"Parse Error on option -i integer value required after argument\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"-s\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"Missing integer argument to -s\0A\00", align 1
@.str.5 = private unnamed_addr constant [64 x i8] c"Parse Error on option -s integer value required after argument\0A\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"Missing integer argument to -r\0A\00", align 1
@.str.8 = private unnamed_addr constant [64 x i8] c"Parse Error on option -r integer value required after argument\0A\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"-f\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"Missing integer argument to -f\0A\00", align 1
@.str.11 = private unnamed_addr constant [64 x i8] c"Parse Error on option -f integer value required after argument\0A\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"-q\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"-b\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"Missing integer argument to -b\0A\00", align 1
@.str.16 = private unnamed_addr constant [64 x i8] c"Parse Error on option -b integer value required after argument\0A\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str.18 = private unnamed_addr constant [32 x i8] c"Missing integer argument to -c\0A\00", align 1
@.str.19 = private unnamed_addr constant [64 x i8] c"Parse Error on option -c integer value required after argument\0A\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"-v\00", align 1
@.str.21 = private unnamed_addr constant [46 x i8] c"Use of -v requires compiling with -DVIZ_MESH\0A\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"ERROR: Unknown command line argument: %s\0A\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"Usage: %s [opts]\0A\00", align 1
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str.38 = private unnamed_addr constant [16 x i8] c"Run completed:\0A\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"   Problem size        =  \00", align 1
@.str.41 = private unnamed_addr constant [27 x i8] c"   MPI tasks           =  \00", align 1
@.str.42 = private unnamed_addr constant [27 x i8] c"   Iteration count     =  \00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"   Final Origin Energy =  \00", align 1
@.str.44 = private unnamed_addr constant [47 x i8] c"   Testing Plane 0 of Energy Array on rank 0:\0A\00", align 1
@.str.45 = private unnamed_addr constant [24 x i8] c"        MaxAbsDiff   = \00", align 1
@.str.46 = private unnamed_addr constant [24 x i8] c"        TotalAbsDiff = \00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c"        MaxRelDiff   = \00", align 1
@.str.48 = private unnamed_addr constant [25 x i8] c"\0AElapsed time         = \00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c" (s)\0A\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"Grind time (us/z/c)  = \00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c" (per dom)  (\00", align 1
@.str.52 = private unnamed_addr constant [11 x i8] c" overall)\0A\00", align 1
@.str.53 = private unnamed_addr constant [24 x i8] c"FOM                  = \00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c" (z/s)\0A\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_lulesh_util.cc, i8* null }]
@str = private unnamed_addr constant [33 x i8] c" where [opts] is one or more of:\00", align 1
@str.55 = private unnamed_addr constant [52 x i8] c" -q              : quiet mode - suppress all stdout\00", align 1
@str.56 = private unnamed_addr constant [43 x i8] c" -i <iterations> : number of cycles to run\00", align 1
@str.57 = private unnamed_addr constant [50 x i8] c" -s <size>       : length of cube mesh along side\00", align 1
@str.58 = private unnamed_addr constant [56 x i8] c" -r <numregions> : Number of distinct regions (def: 11)\00", align 1
@str.59 = private unnamed_addr constant [69 x i8] c" -b <balance>    : Load balance between regions of a domain (def: 1)\00", align 1
@str.60 = private unnamed_addr constant [65 x i8] c" -c <cost>       : Extra cost of more expensive regions (def: 1)\00", align 1
@str.61 = private unnamed_addr constant [75 x i8] c" -f <numfiles>   : Number of files to split viz dump into (def: (np+10)/9)\00", align 1
@str.62 = private unnamed_addr constant [38 x i8] c" -p              : Print out progress\00", align 1
@str.63 = private unnamed_addr constant [71 x i8] c" -v              : Output viz file (requires compiling with -DVIZ_MESH\00", align 1
@str.64 = private unnamed_addr constant [32 x i8] c" -h              : This message\00", align 1
@str.65 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @_Z23ParseCommandLineOptionsiPPciP11cmdLineOpts(i32 %argc, i8** nocapture readonly %argv, i32 %myRank, %struct.cmdLineOpts* nocapture %opts) local_unnamed_addr #3 !dbg !6 {
entry:
  %endptr.i323 = alloca i8*, align 8
  %endptr.i303 = alloca i8*, align 8
  %endptr.i283 = alloca i8*, align 8
  %endptr.i263 = alloca i8*, align 8
  %endptr.i243 = alloca i8*, align 8
  %endptr.i = alloca i8*, align 8
  %msg = alloca [80 x i8], align 16
  %cmp = icmp sgt i32 %argc, 1, !dbg !9
  br i1 %cmp, label %while.body.lr.ph, label %if.end145, !dbg !10

while.body.lr.ph:                                 ; preds = %entry
  %0 = getelementptr inbounds [80 x i8], [80 x i8]* %msg, i64 0, i64 0, !dbg !11
  %cmp.i343 = icmp eq i32 %myRank, 0, !dbg !12
  %1 = bitcast i8** %endptr.i323 to i8*, !dbg !15
  %cost = getelementptr inbounds %struct.cmdLineOpts, %struct.cmdLineOpts* %opts, i64 0, i32 7, !dbg !11
  %2 = bitcast i8** %endptr.i303 to i8*, !dbg !18
  %balance = getelementptr inbounds %struct.cmdLineOpts, %struct.cmdLineOpts* %opts, i64 0, i32 8, !dbg !11
  %quiet = getelementptr inbounds %struct.cmdLineOpts, %struct.cmdLineOpts* %opts, i64 0, i32 5, !dbg !11
  %showProg = getelementptr inbounds %struct.cmdLineOpts, %struct.cmdLineOpts* %opts, i64 0, i32 4, !dbg !11
  %3 = bitcast i8** %endptr.i283 to i8*, !dbg !20
  %numFiles = getelementptr inbounds %struct.cmdLineOpts, %struct.cmdLineOpts* %opts, i64 0, i32 3, !dbg !11
  %4 = bitcast i8** %endptr.i263 to i8*, !dbg !22
  %numReg = getelementptr inbounds %struct.cmdLineOpts, %struct.cmdLineOpts* %opts, i64 0, i32 2, !dbg !11
  %5 = bitcast i8** %endptr.i243 to i8*, !dbg !24
  %nx = getelementptr inbounds %struct.cmdLineOpts, %struct.cmdLineOpts* %opts, i64 0, i32 1, !dbg !11
  %6 = bitcast i8** %endptr.i to i8*, !dbg !26
  %its = getelementptr inbounds %struct.cmdLineOpts, %struct.cmdLineOpts* %opts, i64 0, i32 0, !dbg !11
  br label %while.body, !dbg !28

while.body:                                       ; preds = %while.body.lr.ph, %if.end144
  %i.0366 = phi i32 [ 1, %while.body.lr.ph ], [ %i.1, %if.end144 ]
  %idxprom = sext i32 %i.0366 to i64, !dbg !29
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 %idxprom, !dbg !29
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !29, !tbaa !30
  %call = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #11, !dbg !34
  %cmp2 = icmp eq i32 %call, 0, !dbg !35
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !34

if.then3:                                         ; preds = %while.body
  %add = add nsw i32 %i.0366, 1, !dbg !36
  %cmp4.not = icmp sge i32 %add, %argc, !dbg !37
  %or.cond = and i1 %cmp.i343, %cmp4.not, !dbg !38
  br i1 %or.cond, label %if.then.i, label %if.end, !dbg !38

if.then.i:                                        ; preds = %if.then3
  %puts.i = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !39
  tail call void @exit(i32 -1) #13, !dbg !41
  unreachable, !dbg !41

if.end:                                           ; preds = %if.then3
  %idxprom7 = sext i32 %add to i64, !dbg !42
  %arrayidx8 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom7, !dbg !42
  %8 = load i8*, i8** %arrayidx8, align 8, !dbg !42, !tbaa !30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12, !dbg !43
  %cmp.i232 = icmp eq i8* %8, null, !dbg !44
  br i1 %cmp.i232, label %if.then10, label %if.end.i, !dbg !45

if.end.i:                                         ; preds = %if.end
  %call.i = call i64 @strtol(i8* nonnull %8, i8** nonnull %endptr.i, i32 10) #12, !dbg !46
  %conv.i = trunc i64 %call.i to i32, !dbg !46
  store i32 %conv.i, i32* %its, align 4, !dbg !47, !tbaa !48
  %9 = load i8*, i8** %endptr.i, align 8, !dbg !50, !tbaa !30
  %cmp1.not.i = icmp eq i8* %9, %8, !dbg !51
  br i1 %cmp1.not.i, label %if.then10, label %land.lhs.true.i, !dbg !52

land.lhs.true.i:                                  ; preds = %if.end.i
  %10 = load i8, i8* %9, align 1, !dbg !53, !tbaa !54
  switch i8 %10, label %if.then10 [
    i8 32, label %_Z8StrToIntIiEiPKcPT_.exit
    i8 0, label %_Z8StrToIntIiEiPKcPT_.exit
  ], !dbg !55

_Z8StrToIntIiEiPKcPT_.exit:                       ; preds = %land.lhs.true.i, %land.lhs.true.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12, !dbg !56
  br label %if.end11, !dbg !57

if.then10:                                        ; preds = %if.end.i, %land.lhs.true.i, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12, !dbg !56
  br i1 %cmp.i343, label %if.then.i235, label %if.end11, !dbg !58

if.then.i235:                                     ; preds = %if.then10
  %puts.i234 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !60
  tail call void @exit(i32 -1) #13, !dbg !61
  unreachable, !dbg !61

if.end11:                                         ; preds = %if.then10, %_Z8StrToIntIiEiPKcPT_.exit
  %add12 = add nsw i32 %i.0366, 2, !dbg !62
  br label %if.end144, !dbg !63

if.else:                                          ; preds = %while.body
  %call15 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #11, !dbg !64
  %cmp16 = icmp eq i32 %call15, 0, !dbg !65
  br i1 %cmp16, label %if.then17, label %if.else30, !dbg !64

if.then17:                                        ; preds = %if.else
  %add18 = add nsw i32 %i.0366, 1, !dbg !66
  %cmp19.not = icmp sge i32 %add18, %argc, !dbg !67
  %or.cond360 = and i1 %cmp.i343, %cmp19.not, !dbg !68
  br i1 %or.cond360, label %if.then.i240, label %if.end21, !dbg !68

if.then.i240:                                     ; preds = %if.then17
  %puts.i239 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !69
  tail call void @exit(i32 -1) #13, !dbg !71
  unreachable, !dbg !71

if.end21:                                         ; preds = %if.then17
  %idxprom23 = sext i32 %add18 to i64, !dbg !72
  %arrayidx24 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom23, !dbg !72
  %11 = load i8*, i8** %arrayidx24, align 8, !dbg !72, !tbaa !30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12, !dbg !73
  %cmp.i244 = icmp eq i8* %11, null, !dbg !74
  br i1 %cmp.i244, label %if.then27, label %if.end.i248, !dbg !75

if.end.i248:                                      ; preds = %if.end21
  %call.i245 = call i64 @strtol(i8* nonnull %11, i8** nonnull %endptr.i243, i32 10) #12, !dbg !76
  %conv.i246 = trunc i64 %call.i245 to i32, !dbg !76
  store i32 %conv.i246, i32* %nx, align 4, !dbg !77, !tbaa !48
  %12 = load i8*, i8** %endptr.i243, align 8, !dbg !78, !tbaa !30
  %cmp1.not.i247 = icmp eq i8* %12, %11, !dbg !79
  br i1 %cmp1.not.i247, label %if.then27, label %land.lhs.true.i249, !dbg !80

land.lhs.true.i249:                               ; preds = %if.end.i248
  %13 = load i8, i8* %12, align 1, !dbg !81, !tbaa !54
  switch i8 %13, label %if.then27 [
    i8 32, label %_Z8StrToIntIiEiPKcPT_.exit252
    i8 0, label %_Z8StrToIntIiEiPKcPT_.exit252
  ], !dbg !82

_Z8StrToIntIiEiPKcPT_.exit252:                    ; preds = %land.lhs.true.i249, %land.lhs.true.i249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12, !dbg !83
  br label %if.end28, !dbg !84

if.then27:                                        ; preds = %if.end.i248, %land.lhs.true.i249, %if.end21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12, !dbg !83
  br i1 %cmp.i343, label %if.then.i255, label %if.end28, !dbg !85

if.then.i255:                                     ; preds = %if.then27
  %puts.i254 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([64 x i8], [64 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !87
  tail call void @exit(i32 -1) #13, !dbg !88
  unreachable, !dbg !88

if.end28:                                         ; preds = %if.then27, %_Z8StrToIntIiEiPKcPT_.exit252
  %add29 = add nsw i32 %i.0366, 2, !dbg !89
  br label %if.end144, !dbg !90

if.else30:                                        ; preds = %if.else
  %call33 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !91
  %cmp34 = icmp eq i32 %call33, 0, !dbg !92
  br i1 %cmp34, label %if.then35, label %if.else48, !dbg !91

if.then35:                                        ; preds = %if.else30
  %add36 = add nsw i32 %i.0366, 1, !dbg !93
  %cmp37.not = icmp sge i32 %add36, %argc, !dbg !94
  %or.cond361 = and i1 %cmp.i343, %cmp37.not, !dbg !95
  br i1 %or.cond361, label %if.then.i260, label %if.end39, !dbg !95

if.then.i260:                                     ; preds = %if.then35
  %puts.i259 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !96
  tail call void @exit(i32 -1) #13, !dbg !98
  unreachable, !dbg !98

if.end39:                                         ; preds = %if.then35
  %idxprom41 = sext i32 %add36 to i64, !dbg !99
  %arrayidx42 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom41, !dbg !99
  %14 = load i8*, i8** %arrayidx42, align 8, !dbg !99, !tbaa !30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12, !dbg !100
  %cmp.i264 = icmp eq i8* %14, null, !dbg !101
  br i1 %cmp.i264, label %if.then45, label %if.end.i268, !dbg !102

if.end.i268:                                      ; preds = %if.end39
  %call.i265 = call i64 @strtol(i8* nonnull %14, i8** nonnull %endptr.i263, i32 10) #12, !dbg !103
  %conv.i266 = trunc i64 %call.i265 to i32, !dbg !103
  store i32 %conv.i266, i32* %numReg, align 4, !dbg !104, !tbaa !48
  %15 = load i8*, i8** %endptr.i263, align 8, !dbg !105, !tbaa !30
  %cmp1.not.i267 = icmp eq i8* %15, %14, !dbg !106
  br i1 %cmp1.not.i267, label %if.then45, label %land.lhs.true.i269, !dbg !107

land.lhs.true.i269:                               ; preds = %if.end.i268
  %16 = load i8, i8* %15, align 1, !dbg !108, !tbaa !54
  switch i8 %16, label %if.then45 [
    i8 32, label %_Z8StrToIntIiEiPKcPT_.exit272
    i8 0, label %_Z8StrToIntIiEiPKcPT_.exit272
  ], !dbg !109

_Z8StrToIntIiEiPKcPT_.exit272:                    ; preds = %land.lhs.true.i269, %land.lhs.true.i269
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12, !dbg !110
  br label %if.end46, !dbg !111

if.then45:                                        ; preds = %if.end.i268, %land.lhs.true.i269, %if.end39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12, !dbg !110
  br i1 %cmp.i343, label %if.then.i275, label %if.end46, !dbg !112

if.then.i275:                                     ; preds = %if.then45
  %puts.i274 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([64 x i8], [64 x i8]* @.str.8, i64 0, i64 0)) #12, !dbg !114
  tail call void @exit(i32 -1) #13, !dbg !115
  unreachable, !dbg !115

if.end46:                                         ; preds = %if.then45, %_Z8StrToIntIiEiPKcPT_.exit272
  %add47 = add nsw i32 %i.0366, 2, !dbg !116
  br label %if.end144, !dbg !117

if.else48:                                        ; preds = %if.else30
  %call51 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #11, !dbg !118
  %cmp52 = icmp eq i32 %call51, 0, !dbg !119
  br i1 %cmp52, label %if.then53, label %if.else66, !dbg !118

if.then53:                                        ; preds = %if.else48
  %add54 = add nsw i32 %i.0366, 1, !dbg !120
  %cmp55.not = icmp sge i32 %add54, %argc, !dbg !121
  %or.cond362 = and i1 %cmp.i343, %cmp55.not, !dbg !122
  br i1 %or.cond362, label %if.then.i280, label %if.end57, !dbg !122

if.then.i280:                                     ; preds = %if.then53
  %puts.i279 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !123
  tail call void @exit(i32 -1) #13, !dbg !125
  unreachable, !dbg !125

if.end57:                                         ; preds = %if.then53
  %idxprom59 = sext i32 %add54 to i64, !dbg !126
  %arrayidx60 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom59, !dbg !126
  %17 = load i8*, i8** %arrayidx60, align 8, !dbg !126, !tbaa !30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12, !dbg !127
  %cmp.i284 = icmp eq i8* %17, null, !dbg !128
  br i1 %cmp.i284, label %if.then63, label %if.end.i288, !dbg !129

if.end.i288:                                      ; preds = %if.end57
  %call.i285 = call i64 @strtol(i8* nonnull %17, i8** nonnull %endptr.i283, i32 10) #12, !dbg !130
  %conv.i286 = trunc i64 %call.i285 to i32, !dbg !130
  store i32 %conv.i286, i32* %numFiles, align 4, !dbg !131, !tbaa !48
  %18 = load i8*, i8** %endptr.i283, align 8, !dbg !132, !tbaa !30
  %cmp1.not.i287 = icmp eq i8* %18, %17, !dbg !133
  br i1 %cmp1.not.i287, label %if.then63, label %land.lhs.true.i289, !dbg !134

land.lhs.true.i289:                               ; preds = %if.end.i288
  %19 = load i8, i8* %18, align 1, !dbg !135, !tbaa !54
  switch i8 %19, label %if.then63 [
    i8 32, label %_Z8StrToIntIiEiPKcPT_.exit292
    i8 0, label %_Z8StrToIntIiEiPKcPT_.exit292
  ], !dbg !136

_Z8StrToIntIiEiPKcPT_.exit292:                    ; preds = %land.lhs.true.i289, %land.lhs.true.i289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12, !dbg !137
  br label %if.end64, !dbg !138

if.then63:                                        ; preds = %if.end.i288, %land.lhs.true.i289, %if.end57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12, !dbg !137
  br i1 %cmp.i343, label %if.then.i295, label %if.end64, !dbg !139

if.then.i295:                                     ; preds = %if.then63
  %puts.i294 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([64 x i8], [64 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !141
  tail call void @exit(i32 -1) #13, !dbg !142
  unreachable, !dbg !142

if.end64:                                         ; preds = %if.then63, %_Z8StrToIntIiEiPKcPT_.exit292
  %add65 = add nsw i32 %i.0366, 2, !dbg !143
  br label %if.end144, !dbg !144

if.else66:                                        ; preds = %if.else48
  %call69 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0)) #11, !dbg !145
  %cmp70 = icmp eq i32 %call69, 0, !dbg !146
  br i1 %cmp70, label %if.then71, label %if.else72, !dbg !145

if.then71:                                        ; preds = %if.else66
  store i32 1, i32* %showProg, align 4, !dbg !147, !tbaa !148
  %inc = add nsw i32 %i.0366, 1, !dbg !150
  br label %if.end144, !dbg !151

if.else72:                                        ; preds = %if.else66
  %call75 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #11, !dbg !152
  %cmp76 = icmp eq i32 %call75, 0, !dbg !153
  br i1 %cmp76, label %if.then77, label %if.else79, !dbg !152

if.then77:                                        ; preds = %if.else72
  store i32 1, i32* %quiet, align 4, !dbg !154, !tbaa !155
  %inc78 = add nsw i32 %i.0366, 1, !dbg !156
  br label %if.end144, !dbg !157

if.else79:                                        ; preds = %if.else72
  %call82 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !158
  %cmp83 = icmp eq i32 %call82, 0, !dbg !159
  br i1 %cmp83, label %if.then84, label %if.else97, !dbg !158

if.then84:                                        ; preds = %if.else79
  %add85 = add nsw i32 %i.0366, 1, !dbg !160
  %cmp86.not = icmp sge i32 %add85, %argc, !dbg !161
  %or.cond363 = and i1 %cmp.i343, %cmp86.not, !dbg !162
  br i1 %or.cond363, label %if.then.i300, label %if.end88, !dbg !162

if.then.i300:                                     ; preds = %if.then84
  %puts.i299 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !163
  tail call void @exit(i32 -1) #13, !dbg !165
  unreachable, !dbg !165

if.end88:                                         ; preds = %if.then84
  %idxprom90 = sext i32 %add85 to i64, !dbg !166
  %arrayidx91 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom90, !dbg !166
  %20 = load i8*, i8** %arrayidx91, align 8, !dbg !166, !tbaa !30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #12, !dbg !167
  %cmp.i304 = icmp eq i8* %20, null, !dbg !168
  br i1 %cmp.i304, label %if.then94, label %if.end.i308, !dbg !169

if.end.i308:                                      ; preds = %if.end88
  %call.i305 = call i64 @strtol(i8* nonnull %20, i8** nonnull %endptr.i303, i32 10) #12, !dbg !170
  %conv.i306 = trunc i64 %call.i305 to i32, !dbg !170
  store i32 %conv.i306, i32* %balance, align 4, !dbg !171, !tbaa !48
  %21 = load i8*, i8** %endptr.i303, align 8, !dbg !172, !tbaa !30
  %cmp1.not.i307 = icmp eq i8* %21, %20, !dbg !173
  br i1 %cmp1.not.i307, label %if.then94, label %land.lhs.true.i309, !dbg !174

land.lhs.true.i309:                               ; preds = %if.end.i308
  %22 = load i8, i8* %21, align 1, !dbg !175, !tbaa !54
  switch i8 %22, label %if.then94 [
    i8 32, label %_Z8StrToIntIiEiPKcPT_.exit312
    i8 0, label %_Z8StrToIntIiEiPKcPT_.exit312
  ], !dbg !176

_Z8StrToIntIiEiPKcPT_.exit312:                    ; preds = %land.lhs.true.i309, %land.lhs.true.i309
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #12, !dbg !177
  br label %if.end95, !dbg !178

if.then94:                                        ; preds = %if.end.i308, %land.lhs.true.i309, %if.end88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #12, !dbg !177
  br i1 %cmp.i343, label %if.then.i315, label %if.end95, !dbg !179

if.then.i315:                                     ; preds = %if.then94
  %puts.i314 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([64 x i8], [64 x i8]* @.str.16, i64 0, i64 0)) #12, !dbg !181
  tail call void @exit(i32 -1) #13, !dbg !182
  unreachable, !dbg !182

if.end95:                                         ; preds = %if.then94, %_Z8StrToIntIiEiPKcPT_.exit312
  %add96 = add nsw i32 %i.0366, 2, !dbg !183
  br label %if.end144, !dbg !184

if.else97:                                        ; preds = %if.else79
  %call100 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0)) #11, !dbg !185
  %cmp101 = icmp eq i32 %call100, 0, !dbg !186
  br i1 %cmp101, label %if.then102, label %if.else115, !dbg !185

if.then102:                                       ; preds = %if.else97
  %add103 = add nsw i32 %i.0366, 1, !dbg !187
  %cmp104.not = icmp sge i32 %add103, %argc, !dbg !188
  %or.cond364 = and i1 %cmp.i343, %cmp104.not, !dbg !189
  br i1 %or.cond364, label %if.then.i320, label %if.end106, !dbg !189

if.then.i320:                                     ; preds = %if.then102
  %puts.i319 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0)) #12, !dbg !190
  tail call void @exit(i32 -1) #13, !dbg !192
  unreachable, !dbg !192

if.end106:                                        ; preds = %if.then102
  %idxprom108 = sext i32 %add103 to i64, !dbg !193
  %arrayidx109 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom108, !dbg !193
  %23 = load i8*, i8** %arrayidx109, align 8, !dbg !193, !tbaa !30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #12, !dbg !194
  %cmp.i324 = icmp eq i8* %23, null, !dbg !195
  br i1 %cmp.i324, label %if.then112, label %if.end.i328, !dbg !196

if.end.i328:                                      ; preds = %if.end106
  %call.i325 = call i64 @strtol(i8* nonnull %23, i8** nonnull %endptr.i323, i32 10) #12, !dbg !197
  %conv.i326 = trunc i64 %call.i325 to i32, !dbg !197
  store i32 %conv.i326, i32* %cost, align 4, !dbg !198, !tbaa !48
  %24 = load i8*, i8** %endptr.i323, align 8, !dbg !199, !tbaa !30
  %cmp1.not.i327 = icmp eq i8* %24, %23, !dbg !200
  br i1 %cmp1.not.i327, label %if.then112, label %land.lhs.true.i329, !dbg !201

land.lhs.true.i329:                               ; preds = %if.end.i328
  %25 = load i8, i8* %24, align 1, !dbg !202, !tbaa !54
  switch i8 %25, label %if.then112 [
    i8 32, label %_Z8StrToIntIiEiPKcPT_.exit332
    i8 0, label %_Z8StrToIntIiEiPKcPT_.exit332
  ], !dbg !203

_Z8StrToIntIiEiPKcPT_.exit332:                    ; preds = %land.lhs.true.i329, %land.lhs.true.i329
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #12, !dbg !204
  br label %if.end113, !dbg !205

if.then112:                                       ; preds = %if.end.i328, %land.lhs.true.i329, %if.end106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #12, !dbg !204
  br i1 %cmp.i343, label %if.then.i335, label %if.end113, !dbg !206

if.then.i335:                                     ; preds = %if.then112
  %puts.i334 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([64 x i8], [64 x i8]* @.str.19, i64 0, i64 0)) #12, !dbg !208
  tail call void @exit(i32 -1) #13, !dbg !209
  unreachable, !dbg !209

if.end113:                                        ; preds = %if.then112, %_Z8StrToIntIiEiPKcPT_.exit332
  %add114 = add nsw i32 %i.0366, 2, !dbg !210
  br label %if.end144, !dbg !211

if.else115:                                       ; preds = %if.else97
  %call118 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #11, !dbg !212
  %cmp119 = icmp eq i32 %call118, 0, !dbg !213
  br i1 %cmp119, label %if.then120, label %if.else122, !dbg !212

if.then120:                                       ; preds = %if.else115
  br i1 %cmp.i343, label %if.then.i340, label %_ZL10ParseErrorPKci.exit342, !dbg !214

if.then.i340:                                     ; preds = %if.then120
  %puts.i339 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0)) #12, !dbg !216
  tail call void @exit(i32 -1) #13, !dbg !217
  unreachable, !dbg !217

_ZL10ParseErrorPKci.exit342:                      ; preds = %if.then120
  %inc121 = add nsw i32 %i.0366, 1, !dbg !218
  br label %if.end144, !dbg !219

if.else122:                                       ; preds = %if.else115
  %call125 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0)) #11, !dbg !220
  %cmp126 = icmp eq i32 %call125, 0, !dbg !221
  br i1 %cmp126, label %if.then127, label %if.else129, !dbg !220

if.then127:                                       ; preds = %if.else122
  %26 = load i8*, i8** %argv, align 8, !dbg !222, !tbaa !30
  tail call fastcc void @_ZL23PrintCommandLineOptionsPci(i8* %26, i32 %myRank), !dbg !223
  tail call void @exit(i32 0) #13, !dbg !224
  unreachable, !dbg !224

if.else129:                                       ; preds = %if.else122
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %0) #12, !dbg !225
  %27 = load i8*, i8** %argv, align 8, !dbg !226, !tbaa !30
  tail call fastcc void @_ZL23PrintCommandLineOptionsPci(i8* %27, i32 %myRank), !dbg !227
  %28 = load i8*, i8** %arrayidx, align 8, !dbg !228, !tbaa !30
  %call133 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* nonnull dereferenceable(1) getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i64 0, i64 0), i8* %28) #12, !dbg !229
  br i1 %cmp.i343, label %if.then.i345, label %_ZL10ParseErrorPKci.exit347, !dbg !230

if.then.i345:                                     ; preds = %if.else129
  %puts.i344 = call i32 @puts(i8* nonnull dereferenceable(1) %0) #12, !dbg !231
  tail call void @exit(i32 -1) #13, !dbg !232
  unreachable, !dbg !232

_ZL10ParseErrorPKci.exit347:                      ; preds = %if.else129
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %0) #12, !dbg !233
  br label %if.end144

if.end144:                                        ; preds = %if.end28, %if.end64, %if.then77, %if.end113, %_ZL10ParseErrorPKci.exit347, %_ZL10ParseErrorPKci.exit342, %if.end95, %if.then71, %if.end46, %if.end11
  %i.1 = phi i32 [ %add12, %if.end11 ], [ %add29, %if.end28 ], [ %add47, %if.end46 ], [ %add65, %if.end64 ], [ %inc, %if.then71 ], [ %inc78, %if.then77 ], [ %add96, %if.end95 ], [ %add114, %if.end113 ], [ %inc121, %_ZL10ParseErrorPKci.exit342 ], [ %i.0366, %_ZL10ParseErrorPKci.exit347 ], !dbg !11
  %cmp1 = icmp slt i32 %i.1, %argc, !dbg !234
  br i1 %cmp1, label %while.body, label %if.end145, !dbg !28, !llvm.loop !235

if.end145:                                        ; preds = %if.end144, %entry
  ret void, !dbg !237
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nounwind readonly
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @_ZL23PrintCommandLineOptionsPci(i8* %execname, i32 %myRank) unnamed_addr #6 !dbg !238 {
entry:
  %cmp = icmp eq i32 %myRank, 0, !dbg !239
  br i1 %cmp, label %if.then, label %if.end, !dbg !240

if.then:                                          ; preds = %entry
  %call = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* %execname), !dbg !241
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([33 x i8], [33 x i8]* @str, i64 0, i64 0)), !dbg !242
  %puts13 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str.55, i64 0, i64 0)), !dbg !243
  %puts14 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([43 x i8], [43 x i8]* @str.56, i64 0, i64 0)), !dbg !244
  %puts15 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([50 x i8], [50 x i8]* @str.57, i64 0, i64 0)), !dbg !245
  %puts16 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([56 x i8], [56 x i8]* @str.58, i64 0, i64 0)), !dbg !246
  %puts17 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([69 x i8], [69 x i8]* @str.59, i64 0, i64 0)), !dbg !247
  %puts18 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([65 x i8], [65 x i8]* @str.60, i64 0, i64 0)), !dbg !248
  %puts19 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([75 x i8], [75 x i8]* @str.61, i64 0, i64 0)), !dbg !249
  %puts20 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @str.62, i64 0, i64 0)), !dbg !250
  %puts21 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([71 x i8], [71 x i8]* @str.63, i64 0, i64 0)), !dbg !251
  %puts22 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @str.64, i64 0, i64 0)), !dbg !252
  %puts23 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.65, i64 0, i64 0)), !dbg !253
  br label %if.end, !dbg !254

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !255
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare dso_local i32 @sprintf(i8* noalias nocapture, i8* nocapture readonly, ...) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare dso_local i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #8

; Function Attrs: uwtable
define dso_local void @_Z25VerifyAndWriteFinalOutputdR6Domainii(double %elapsed_time, %class.Domain* nocapture nonnull readonly align 8 dereferenceable(1312) %locDom, i32 %nx, i32 %numRanks) local_unnamed_addr #9 !dbg !256 {
entry:
  %conv = sext i32 %nx to i64, !dbg !257
  %m_cycle.i = getelementptr inbounds %class.Domain, %class.Domain* %locDom, i64 0, i32 72, !dbg !258
  %0 = load i32, i32* %m_cycle.i, align 8, !dbg !262, !tbaa !48
  %mul2 = mul nsw i64 %conv, %conv, !dbg !263
  %mul3 = mul nsw i64 %mul2, %conv, !dbg !264
  %call1.i186 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i64 15), !dbg !265
  %call1.i188 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i64 26), !dbg !269
  %call18 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %nx), !dbg !271
  %call1.i190 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call18, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @str.65, i64 0, i64 0), i64 1), !dbg !272
  %call1.i192 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i64 26), !dbg !274
  %call21 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %numRanks), !dbg !276
  %call1.i194 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call21, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @str.65, i64 0, i64 0), i64 1), !dbg !277
  %call1.i196 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i64 26), !dbg !279
  %1 = load i32, i32* %m_cycle.i, align 8, !dbg !281, !tbaa !48
  %call25 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %1), !dbg !282
  %call1.i199 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call25, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @str.65, i64 0, i64 0), i64 1), !dbg !283
  %call1.i201 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0), i64 26), !dbg !285
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !dbg !287, !tbaa !290
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24, !dbg !287
  %2 = bitcast i8* %vbase.offset.ptr.i to i64*, !dbg !287
  %vbase.offset.i = load i64, i64* %2, align 8, !dbg !287
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i, !dbg !287
  %_M_flags.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 24, !dbg !292
  %3 = bitcast i8* %_M_flags.i to i32*, !dbg !292
  %4 = load i32, i32* %3, align 4, !dbg !298, !tbaa !301
  %and.i.i = and i32 %4, -261, !dbg !303
  %or.i = or i32 %and.i.i, 256, !dbg !306
  store i32 %or.i, i32* %3, align 4, !dbg !311, !tbaa !301
  %vbase.offset.i206 = load i64, i64* %2, align 8, !dbg !312
  %add.ptr.i207 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i206, !dbg !312
  %_M_precision.i.i = getelementptr inbounds i8, i8* %add.ptr.i207, i64 8, !dbg !316
  %5 = bitcast i8* %_M_precision.i.i to i64*, !dbg !316
  store i64 6, i64* %5, align 8, !dbg !319, !tbaa !320
  %vbase.offset.i210 = load i64, i64* %2, align 8, !dbg !326
  %add.ptr.i211 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i210, !dbg !326
  %_M_width.i.i = getelementptr inbounds i8, i8* %add.ptr.i211, i64 16, !dbg !329
  %6 = bitcast i8* %_M_width.i.i to i64*, !dbg !329
  store i64 12, i64* %6, align 8, !dbg !332, !tbaa !333
  %_M_start.i.i212 = getelementptr inbounds %class.Domain, %class.Domain* %locDom, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, !dbg !334
  %7 = load double*, double** %_M_start.i.i212, align 8, !dbg !334, !tbaa !340
  %8 = load double, double* %7, align 8, !dbg !342, !tbaa !343
  %call.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull @_ZSt4cout, double %8), !dbg !345
  %call1.i214 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @str.65, i64 0, i64 0), i64 1), !dbg !348
  %cmp302 = icmp sgt i32 %nx, 0, !dbg !350
  br i1 %cmp302, label %for.body.lr.ph, label %for.cond.cleanup, !dbg !351

for.body.lr.ph:                                   ; preds = %entry
  %9 = load double*, double** %_M_start.i.i212, align 8, !dbg !352
  %wide.trip.count318 = zext i32 %nx to i64, !dbg !350
  %10 = add nsw i64 %wide.trip.count318, -2, !dbg !351
  br label %for.body, !dbg !351

for.cond.loopexit:                                ; preds = %for.body43.prol.loopexit, %for.body43, %for.body
  %MaxRelDiff.1.lcssa = phi double [ %MaxRelDiff.0304, %for.body ], [ %MaxRelDiff.2.lcssa.unr.ph, %for.body43.prol.loopexit ], [ %MaxRelDiff.2.1, %for.body43 ], !dbg !355
  %TotalAbsDiff.1.lcssa = phi double [ %TotalAbsDiff.0305, %for.body ], [ %add51.lcssa.unr.ph, %for.body43.prol.loopexit ], [ %add51.1, %for.body43 ], !dbg !355
  %MaxAbsDiff.1.lcssa = phi double [ %MaxAbsDiff.0306, %for.body ], [ %MaxAbsDiff.2.lcssa.unr.ph, %for.body43.prol.loopexit ], [ %MaxAbsDiff.2.1, %for.body43 ], !dbg !355
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !351
  %exitcond319.not = icmp eq i64 %indvars.iv.next316, %wide.trip.count318, !dbg !350
  br i1 %exitcond319.not, label %for.cond.cleanup, label %for.body, !dbg !351

for.cond.cleanup:                                 ; preds = %for.cond.loopexit, %entry
  %MaxRelDiff.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %MaxRelDiff.1.lcssa, %for.cond.loopexit ], !dbg !356
  %TotalAbsDiff.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %TotalAbsDiff.1.lcssa, %for.cond.loopexit ], !dbg !357
  %MaxAbsDiff.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %MaxAbsDiff.1.lcssa, %for.cond.loopexit ], !dbg !358
  %mul = fmul double %elapsed_time, 1.000000e+06, !dbg !359
  %conv8 = sitofp i32 %0 to double, !dbg !360
  %div9 = fdiv double %mul, %conv8, !dbg !361
  %conv12 = sext i32 %numRanks to i64, !dbg !362
  %mul13 = mul nsw i64 %mul3, %conv12, !dbg !363
  %conv14 = sitofp i64 %mul13 to double, !dbg !364
  %div15 = fdiv double %div9, %conv14, !dbg !365
  %conv4 = sitofp i64 %mul3 to double, !dbg !366
  %div5 = fdiv double %div9, %conv4, !dbg !367
  %call1.i216 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([47 x i8], [47 x i8]* @.str.44, i64 0, i64 0), i64 46), !dbg !368
  %call1.i218 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.45, i64 0, i64 0), i64 23), !dbg !370
  %vtable.i219 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !dbg !372, !tbaa !290
  %vbase.offset.ptr.i220 = getelementptr i8, i8* %vtable.i219, i64 -24, !dbg !372
  %11 = bitcast i8* %vbase.offset.ptr.i220 to i64*, !dbg !372
  %vbase.offset.i221 = load i64, i64* %11, align 8, !dbg !372
  %add.ptr.i222 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i221, !dbg !372
  %_M_width.i.i223 = getelementptr inbounds i8, i8* %add.ptr.i222, i64 16, !dbg !374
  %12 = bitcast i8* %_M_width.i.i223 to i64*, !dbg !374
  store i64 12, i64* %12, align 8, !dbg !376, !tbaa !333
  %call.i224 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull @_ZSt4cout, double %MaxAbsDiff.0.lcssa), !dbg !377
  %call1.i226 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i224, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @str.65, i64 0, i64 0), i64 1), !dbg !379
  %call1.i228 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i64 0, i64 0), i64 23), !dbg !381
  %vtable.i229 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !dbg !383, !tbaa !290
  %vbase.offset.ptr.i230 = getelementptr i8, i8* %vtable.i229, i64 -24, !dbg !383
  %13 = bitcast i8* %vbase.offset.ptr.i230 to i64*, !dbg !383
  %vbase.offset.i231 = load i64, i64* %13, align 8, !dbg !383
  %add.ptr.i232 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i231, !dbg !383
  %_M_width.i.i233 = getelementptr inbounds i8, i8* %add.ptr.i232, i64 16, !dbg !385
  %14 = bitcast i8* %_M_width.i.i233 to i64*, !dbg !385
  store i64 12, i64* %14, align 8, !dbg !387, !tbaa !333
  %call.i234 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull @_ZSt4cout, double %TotalAbsDiff.0.lcssa), !dbg !388
  %call1.i236 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i234, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @str.65, i64 0, i64 0), i64 1), !dbg !390
  %call1.i238 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i64 0, i64 0), i64 23), !dbg !392
  %vtable.i239 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !dbg !394, !tbaa !290
  %vbase.offset.ptr.i240 = getelementptr i8, i8* %vtable.i239, i64 -24, !dbg !394
  %15 = bitcast i8* %vbase.offset.ptr.i240 to i64*, !dbg !394
  %vbase.offset.i241 = load i64, i64* %15, align 8, !dbg !394
  %add.ptr.i242 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i241, !dbg !394
  %_M_width.i.i243 = getelementptr inbounds i8, i8* %add.ptr.i242, i64 16, !dbg !396
  %16 = bitcast i8* %_M_width.i.i243 to i64*, !dbg !396
  store i64 12, i64* %16, align 8, !dbg !398, !tbaa !333
  %call.i244 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull @_ZSt4cout, double %MaxRelDiff.0.lcssa), !dbg !399
  %call1.i246 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i244, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @str.65, i64 0, i64 0), i64 1), !dbg !401
  %vtable = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !dbg !403, !tbaa !290
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24, !dbg !403
  %17 = bitcast i8* %vbase.offset.ptr to i64*, !dbg !403
  %vbase.offset = load i64, i64* %17, align 8, !dbg !403
  %add.ptr = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset, !dbg !403
  %_M_flags.i247 = getelementptr inbounds i8, i8* %add.ptr, i64 24, !dbg !404
  %18 = bitcast i8* %_M_flags.i247 to i32*, !dbg !404
  %19 = load i32, i32* %18, align 4, !dbg !407, !tbaa !301
  %and.i.i.i = and i32 %19, -261, !dbg !409
  store i32 %and.i.i.i, i32* %18, align 4, !dbg !411, !tbaa !301
  %vbase.offset.i250 = load i64, i64* %17, align 8, !dbg !412
  %add.ptr.i251 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i250, !dbg !412
  %_M_precision.i.i252 = getelementptr inbounds i8, i8* %add.ptr.i251, i64 8, !dbg !414
  %20 = bitcast i8* %_M_precision.i.i252 to i64*, !dbg !414
  store i64 8, i64* %20, align 8, !dbg !416, !tbaa !320
  %call1.i254 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([25 x i8], [25 x i8]* @.str.48, i64 0, i64 0), i64 24), !dbg !417
  %vtable.i255 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !dbg !419, !tbaa !290
  %vbase.offset.ptr.i256 = getelementptr i8, i8* %vtable.i255, i64 -24, !dbg !419
  %21 = bitcast i8* %vbase.offset.ptr.i256 to i64*, !dbg !419
  %vbase.offset.i257 = load i64, i64* %21, align 8, !dbg !419
  %add.ptr.i258 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i257, !dbg !419
  %_M_width.i.i259 = getelementptr inbounds i8, i8* %add.ptr.i258, i64 16, !dbg !421
  %22 = bitcast i8* %_M_width.i.i259 to i64*, !dbg !421
  store i64 10, i64* %22, align 8, !dbg !423, !tbaa !333
  %call.i261 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull @_ZSt4cout, double %elapsed_time), !dbg !424
  %call1.i263 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i261, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0), i64 5), !dbg !426
  %vtable.i264 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !dbg !428, !tbaa !290
  %vbase.offset.ptr.i265 = getelementptr i8, i8* %vtable.i264, i64 -24, !dbg !428
  %23 = bitcast i8* %vbase.offset.ptr.i265 to i64*, !dbg !428
  %vbase.offset.i266 = load i64, i64* %23, align 8, !dbg !428
  %add.ptr.i267 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i266, !dbg !428
  %_M_precision.i.i268 = getelementptr inbounds i8, i8* %add.ptr.i267, i64 8, !dbg !430
  %24 = bitcast i8* %_M_precision.i.i268 to i64*, !dbg !430
  store i64 8, i64* %24, align 8, !dbg !432, !tbaa !320
  %call1.i278 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i64 0, i64 0), i64 23), !dbg !433
  %vtable.i279 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !dbg !435, !tbaa !290
  %vbase.offset.ptr.i280 = getelementptr i8, i8* %vtable.i279, i64 -24, !dbg !435
  %25 = bitcast i8* %vbase.offset.ptr.i280 to i64*, !dbg !435
  %vbase.offset.i281 = load i64, i64* %25, align 8, !dbg !435
  %add.ptr.i282 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i281, !dbg !435
  %_M_width.i.i283 = getelementptr inbounds i8, i8* %add.ptr.i282, i64 16, !dbg !437
  %26 = bitcast i8* %_M_width.i.i283 to i64*, !dbg !437
  store i64 10, i64* %26, align 8, !dbg !439, !tbaa !333
  %call.i284 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull @_ZSt4cout, double %div5), !dbg !440
  %call1.i286 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i284, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0), i64 13), !dbg !442
  %27 = bitcast %"class.std::basic_ostream"* %call.i284 to i8**, !dbg !444
  %vtable.i287 = load i8*, i8** %27, align 8, !dbg !444, !tbaa !290
  %vbase.offset.ptr.i288 = getelementptr i8, i8* %vtable.i287, i64 -24, !dbg !444
  %28 = bitcast i8* %vbase.offset.ptr.i288 to i64*, !dbg !444
  %vbase.offset.i289 = load i64, i64* %28, align 8, !dbg !444
  %29 = bitcast %"class.std::basic_ostream"* %call.i284 to i8*, !dbg !444
  %add.ptr.i290 = getelementptr inbounds i8, i8* %29, i64 %vbase.offset.i289, !dbg !444
  %_M_width.i.i291 = getelementptr inbounds i8, i8* %add.ptr.i290, i64 16, !dbg !446
  %30 = bitcast i8* %_M_width.i.i291 to i64*, !dbg !446
  store i64 10, i64* %30, align 8, !dbg !448, !tbaa !333
  %call.i294 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull %call.i284, double %elapsed_time), !dbg !449
  %call1.i293 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i294, i8* nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i64 10), !dbg !451
  %call1.i276 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.53, i64 0, i64 0), i64 23), !dbg !453
  %vtable.i269 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !dbg !455, !tbaa !290
  %vbase.offset.ptr.i270 = getelementptr i8, i8* %vtable.i269, i64 -24, !dbg !455
  %31 = bitcast i8* %vbase.offset.ptr.i270 to i64*, !dbg !455
  %vbase.offset.i271 = load i64, i64* %31, align 8, !dbg !455
  %add.ptr.i272 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i271, !dbg !455
  %_M_width.i.i274 = getelementptr inbounds i8, i8* %add.ptr.i272, i64 16, !dbg !457
  %32 = bitcast i8* %_M_width.i.i274 to i64*, !dbg !457
  store i64 10, i64* %32, align 8, !dbg !459, !tbaa !333
  %div127 = fdiv double 1.000000e+03, %div15, !dbg !460
  %call.i260 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull @_ZSt4cout, double %div127), !dbg !461
  %call1.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i260, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i64 0, i64 0), i64 8), !dbg !463
  ret void, !dbg !465

for.body:                                         ; preds = %for.cond.loopexit, %for.body.lr.ph
  %indvars.iv315 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next316, %for.cond.loopexit ]
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.loopexit ]
  %MaxAbsDiff.0306 = phi double [ 0.000000e+00, %for.body.lr.ph ], [ %MaxAbsDiff.1.lcssa, %for.cond.loopexit ]
  %TotalAbsDiff.0305 = phi double [ 0.000000e+00, %for.body.lr.ph ], [ %TotalAbsDiff.1.lcssa, %for.cond.loopexit ]
  %MaxRelDiff.0304 = phi double [ 0.000000e+00, %for.body.lr.ph ], [ %MaxRelDiff.1.lcssa, %for.cond.loopexit ]
  %indvars.iv.next316 = add nuw nsw i64 %indvars.iv315, 1, !dbg !466
  %cmp41295 = icmp slt i64 %indvars.iv.next316, %conv, !dbg !467
  br i1 %cmp41295, label %for.body43.lr.ph, label %for.cond.loopexit, !dbg !468, !llvm.loop !469

for.body43.lr.ph:                                 ; preds = %for.body
  %33 = xor i64 %indvars.iv315, 1, !dbg !466
  %34 = add nuw i64 %33, %wide.trip.count318, !dbg !466
  %35 = mul nsw i64 %indvars.iv315, %conv, !dbg !355
  %xtraiter = and i64 %34, 1, !dbg !468
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !468
  br i1 %lcmp.mod.not, label %for.body43.prol.loopexit, label %for.body43.prol, !dbg !468

for.body43.prol:                                  ; preds = %for.body43.lr.ph
  %36 = add nsw i64 %indvars.iv, %35, !dbg !471
  %add.ptr.i.i183.prol = getelementptr inbounds double, double* %9, i64 %36, !dbg !472
  %37 = load double, double* %add.ptr.i.i183.prol, align 8, !dbg !473, !tbaa !343
  %38 = mul nsw i64 %indvars.iv, %conv, !dbg !474
  %39 = add nsw i64 %38, %indvars.iv315, !dbg !475
  %add.ptr.i.i180.prol = getelementptr inbounds double, double* %9, i64 %39, !dbg !476
  %40 = load double, double* %add.ptr.i.i180.prol, align 8, !dbg !479, !tbaa !343
  %sub.prol = fsub double %37, %40, !dbg !480
  %41 = tail call double @llvm.fabs.f64(double %sub.prol) #12, !dbg !481
  %add51.prol = fadd double %TotalAbsDiff.0305, %41, !dbg !484
  %cmp52.prol = fcmp olt double %MaxAbsDiff.0306, %41, !dbg !485
  %MaxAbsDiff.2.prol = select i1 %cmp52.prol, double %41, double %MaxAbsDiff.0306, !dbg !486
  %div56.prol = fdiv double %41, %40, !dbg !487
  %cmp57.prol = fcmp olt double %MaxRelDiff.0304, %div56.prol, !dbg !488
  %MaxRelDiff.2.prol = select i1 %cmp57.prol, double %div56.prol, double %MaxRelDiff.0304, !dbg !489
  %indvars.iv.next311.prol = add nuw nsw i64 %indvars.iv, 1, !dbg !490
  br label %for.body43.prol.loopexit, !dbg !468

for.body43.prol.loopexit:                         ; preds = %for.body43.prol, %for.body43.lr.ph
  %add51.lcssa.unr.ph = phi double [ %add51.prol, %for.body43.prol ], [ undef, %for.body43.lr.ph ]
  %MaxAbsDiff.2.lcssa.unr.ph = phi double [ %MaxAbsDiff.2.prol, %for.body43.prol ], [ undef, %for.body43.lr.ph ]
  %MaxRelDiff.2.lcssa.unr.ph = phi double [ %MaxRelDiff.2.prol, %for.body43.prol ], [ undef, %for.body43.lr.ph ]
  %indvars.iv310.unr.ph = phi i64 [ %indvars.iv.next311.prol, %for.body43.prol ], [ %indvars.iv, %for.body43.lr.ph ]
  %MaxAbsDiff.1299.unr.ph = phi double [ %MaxAbsDiff.2.prol, %for.body43.prol ], [ %MaxAbsDiff.0306, %for.body43.lr.ph ]
  %TotalAbsDiff.1298.unr.ph = phi double [ %add51.prol, %for.body43.prol ], [ %TotalAbsDiff.0305, %for.body43.lr.ph ]
  %MaxRelDiff.1297.unr.ph = phi double [ %MaxRelDiff.2.prol, %for.body43.prol ], [ %MaxRelDiff.0304, %for.body43.lr.ph ]
  %42 = icmp eq i64 %10, %indvars.iv315, !dbg !468
  br i1 %42, label %for.cond.loopexit, label %for.body43, !dbg !468

for.body43:                                       ; preds = %for.body43.prol.loopexit, %for.body43
  %indvars.iv310 = phi i64 [ %indvars.iv.next311.1, %for.body43 ], [ %indvars.iv310.unr.ph, %for.body43.prol.loopexit ]
  %MaxAbsDiff.1299 = phi double [ %MaxAbsDiff.2.1, %for.body43 ], [ %MaxAbsDiff.1299.unr.ph, %for.body43.prol.loopexit ]
  %TotalAbsDiff.1298 = phi double [ %add51.1, %for.body43 ], [ %TotalAbsDiff.1298.unr.ph, %for.body43.prol.loopexit ]
  %MaxRelDiff.1297 = phi double [ %MaxRelDiff.2.1, %for.body43 ], [ %MaxRelDiff.1297.unr.ph, %for.body43.prol.loopexit ]
  %43 = add nsw i64 %indvars.iv310, %35, !dbg !471
  %add.ptr.i.i183 = getelementptr inbounds double, double* %9, i64 %43, !dbg !472
  %44 = load double, double* %add.ptr.i.i183, align 8, !dbg !473, !tbaa !343
  %45 = mul nsw i64 %indvars.iv310, %conv, !dbg !474
  %46 = add nsw i64 %45, %indvars.iv315, !dbg !475
  %add.ptr.i.i180 = getelementptr inbounds double, double* %9, i64 %46, !dbg !476
  %47 = load double, double* %add.ptr.i.i180, align 8, !dbg !479, !tbaa !343
  %sub = fsub double %44, %47, !dbg !480
  %48 = tail call double @llvm.fabs.f64(double %sub) #12, !dbg !481
  %add51 = fadd double %TotalAbsDiff.1298, %48, !dbg !484
  %cmp52 = fcmp olt double %MaxAbsDiff.1299, %48, !dbg !485
  %MaxAbsDiff.2 = select i1 %cmp52, double %48, double %MaxAbsDiff.1299, !dbg !486
  %div56 = fdiv double %48, %47, !dbg !487
  %cmp57 = fcmp olt double %MaxRelDiff.1297, %div56, !dbg !488
  %MaxRelDiff.2 = select i1 %cmp57, double %div56, double %MaxRelDiff.1297, !dbg !489
  %indvars.iv.next311 = add nuw nsw i64 %indvars.iv310, 1, !dbg !490
  %49 = add nsw i64 %indvars.iv.next311, %35, !dbg !471
  %add.ptr.i.i183.1 = getelementptr inbounds double, double* %9, i64 %49, !dbg !472
  %50 = load double, double* %add.ptr.i.i183.1, align 8, !dbg !473, !tbaa !343
  %51 = mul nsw i64 %indvars.iv.next311, %conv, !dbg !474
  %52 = add nsw i64 %51, %indvars.iv315, !dbg !475
  %add.ptr.i.i180.1 = getelementptr inbounds double, double* %9, i64 %52, !dbg !476
  %53 = load double, double* %add.ptr.i.i180.1, align 8, !dbg !479, !tbaa !343
  %sub.1 = fsub double %50, %53, !dbg !480
  %54 = tail call double @llvm.fabs.f64(double %sub.1) #12, !dbg !481
  %add51.1 = fadd double %add51, %54, !dbg !484
  %cmp52.1 = fcmp olt double %MaxAbsDiff.2, %54, !dbg !485
  %MaxAbsDiff.2.1 = select i1 %cmp52.1, double %54, double %MaxAbsDiff.2, !dbg !486
  %div56.1 = fdiv double %54, %53, !dbg !487
  %cmp57.1 = fcmp olt double %MaxRelDiff.2, %div56.1, !dbg !488
  %MaxRelDiff.2.1 = select i1 %cmp57.1, double %div56.1, double %MaxRelDiff.2, !dbg !489
  %indvars.iv.next311.1 = add nuw nsw i64 %indvars.iv310, 2, !dbg !490
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next311.1, %wide.trip.count318, !dbg !467
  br i1 %exitcond.not.1, label %for.cond.loopexit, label %for.body43, !dbg !468, !llvm.loop !491
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"*, double) local_unnamed_addr #0

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #10

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_lulesh_util.cc() #9 section ".text.startup" !dbg !493 {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit), !dbg !494
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #12, !dbg !494
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #2

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="broadwell" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+rtm,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-amx-bf16,-amx-int8,-amx-tile,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-enqcmd,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-serialize,-sgx,-sha,-shstk,-sse4a,-tbm,-tsxldtrk,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="broadwell" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+rtm,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-amx-bf16,-amx-int8,-amx-tile,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-enqcmd,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-serialize,-sgx,-sha,-shstk,-sse4a,-tbm,-tsxldtrk,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="broadwell" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+rtm,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-amx-bf16,-amx-int8,-amx-tile,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-enqcmd,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-serialize,-sgx,-sha,-shstk,-sse4a,-tbm,-tsxldtrk,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="broadwell" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+rtm,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-amx-bf16,-amx-int8,-amx-tile,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-enqcmd,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-serialize,-sgx,-sha,-shstk,-sse4a,-tbm,-tsxldtrk,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="broadwell" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+rtm,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-amx-bf16,-amx-int8,-amx-tile,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-enqcmd,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-serialize,-sgx,-sha,-shstk,-sse4a,-tbm,-tsxldtrk,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="broadwell" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+rtm,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-amx-bf16,-amx-int8,-amx-tile,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-enqcmd,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-serialize,-sgx,-sha,-shstk,-sse4a,-tbm,-tsxldtrk,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="broadwell" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+rtm,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-amx-bf16,-amx-int8,-amx-tile,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-enqcmd,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-serialize,-sgx,-sha,-shstk,-sse4a,-tbm,-tsxldtrk,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="broadwell" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+rtm,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-amx-bf16,-amx-int8,-amx-tile,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-enqcmd,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-serialize,-sgx,-sha,-shstk,-sse4a,-tbm,-tsxldtrk,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable willreturn }
attributes #11 = { nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4}
!llvm.ident = !{!5}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1, producer: "clang version 12.0.0 (/g/g15/bolet1/workspace/clang-apollo/llvm-project/clang 7e06c0193e99c89864293f0bdacaaebe656553cd)", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/g/g15/bolet1/workspace/lulesh-region-fix-correct/LULESH/lulesh-util.cc", directory: "/g/g15/bolet1/workspace/lulesh-region-fix-correct/LULESH/buildNoApollo")
!2 = !{}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{!"clang version 12.0.0 (/g/g15/bolet1/workspace/clang-apollo/llvm-project/clang 7e06c0193e99c89864293f0bdacaaebe656553cd)"}
!6 = distinct !DISubprogram(name: "ParseCommandLineOptions", scope: !7, file: !7, line: 63, type: !8, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!7 = !DIFile(filename: "lulesh-util.cc", directory: "/g/g15/bolet1/workspace/lulesh-region-fix-correct/LULESH")
!8 = !DISubroutineType(types: !2)
!9 = !DILocation(line: 66, column: 12, scope: !6)
!10 = !DILocation(line: 66, column: 7, scope: !6)
!11 = !DILocation(line: 0, scope: !6)
!12 = !DILocation(line: 0, scope: !13, inlinedAt: !14)
!13 = distinct !DISubprogram(name: "ParseError", scope: !7, file: !7, line: 51, type: !8, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!14 = distinct !DILocation(line: 167, column: 13, scope: !6)
!15 = !DILocation(line: 0, scope: !16, inlinedAt: !17)
!16 = distinct !DISubprogram(name: "StrToInt<int>", scope: !7, file: !7, line: 14, type: !8, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!17 = distinct !DILocation(line: 139, column: 18, scope: !6)
!18 = !DILocation(line: 0, scope: !16, inlinedAt: !19)
!19 = distinct !DILocation(line: 129, column: 18, scope: !6)
!20 = !DILocation(line: 0, scope: !16, inlinedAt: !21)
!21 = distinct !DILocation(line: 109, column: 18, scope: !6)
!22 = !DILocation(line: 0, scope: !16, inlinedAt: !23)
!23 = distinct !DILocation(line: 98, column: 18, scope: !6)
!24 = !DILocation(line: 0, scope: !16, inlinedAt: !25)
!25 = distinct !DILocation(line: 87, column: 18, scope: !6)
!26 = !DILocation(line: 0, scope: !16, inlinedAt: !27)
!27 = distinct !DILocation(line: 76, column: 18, scope: !6)
!28 = !DILocation(line: 69, column: 7, scope: !6)
!29 = !DILocation(line: 72, column: 20, scope: !6)
!30 = !{!31, !31, i64 0}
!31 = !{!"any pointer", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C++ TBAA"}
!34 = !DILocation(line: 72, column: 13, scope: !6)
!35 = !DILocation(line: 72, column: 35, scope: !6)
!36 = !DILocation(line: 73, column: 18, scope: !6)
!37 = !DILocation(line: 73, column: 21, scope: !6)
!38 = !DILocation(line: 73, column: 17, scope: !6)
!39 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !40)
!40 = distinct !DILocation(line: 74, column: 16, scope: !6)
!41 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !40)
!42 = !DILocation(line: 76, column: 27, scope: !6)
!43 = !DILocation(line: 17, column: 4, scope: !16, inlinedAt: !27)
!44 = !DILocation(line: 20, column: 14, scope: !16, inlinedAt: !27)
!45 = !DILocation(line: 20, column: 8, scope: !16, inlinedAt: !27)
!46 = !DILocation(line: 24, column: 14, scope: !16, inlinedAt: !27)
!47 = !DILocation(line: 24, column: 12, scope: !16, inlinedAt: !27)
!48 = !{!49, !49, i64 0}
!49 = !{!"int", !32, i64 0}
!50 = !DILocation(line: 25, column: 8, scope: !16, inlinedAt: !27)
!51 = !DILocation(line: 25, column: 15, scope: !16, inlinedAt: !27)
!52 = !DILocation(line: 25, column: 21, scope: !16, inlinedAt: !27)
!53 = !DILocation(line: 25, column: 26, scope: !16, inlinedAt: !27)
!54 = !{!32, !32, i64 0}
!55 = !DILocation(line: 25, column: 42, scope: !16, inlinedAt: !27)
!56 = !DILocation(line: 29, column: 1, scope: !16, inlinedAt: !27)
!57 = !DILocation(line: 77, column: 16, scope: !6)
!58 = !DILocation(line: 53, column: 8, scope: !13, inlinedAt: !59)
!59 = distinct !DILocation(line: 78, column: 16, scope: !6)
!60 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !59)
!61 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !59)
!62 = !DILocation(line: 80, column: 14, scope: !6)
!63 = !DILocation(line: 81, column: 10, scope: !6)
!64 = !DILocation(line: 83, column: 18, scope: !6)
!65 = !DILocation(line: 83, column: 40, scope: !6)
!66 = !DILocation(line: 84, column: 18, scope: !6)
!67 = !DILocation(line: 84, column: 21, scope: !6)
!68 = !DILocation(line: 84, column: 17, scope: !6)
!69 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !70)
!70 = distinct !DILocation(line: 85, column: 16, scope: !6)
!71 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !70)
!72 = !DILocation(line: 87, column: 27, scope: !6)
!73 = !DILocation(line: 17, column: 4, scope: !16, inlinedAt: !25)
!74 = !DILocation(line: 20, column: 14, scope: !16, inlinedAt: !25)
!75 = !DILocation(line: 20, column: 8, scope: !16, inlinedAt: !25)
!76 = !DILocation(line: 24, column: 14, scope: !16, inlinedAt: !25)
!77 = !DILocation(line: 24, column: 12, scope: !16, inlinedAt: !25)
!78 = !DILocation(line: 25, column: 8, scope: !16, inlinedAt: !25)
!79 = !DILocation(line: 25, column: 15, scope: !16, inlinedAt: !25)
!80 = !DILocation(line: 25, column: 21, scope: !16, inlinedAt: !25)
!81 = !DILocation(line: 25, column: 26, scope: !16, inlinedAt: !25)
!82 = !DILocation(line: 25, column: 42, scope: !16, inlinedAt: !25)
!83 = !DILocation(line: 29, column: 1, scope: !16, inlinedAt: !25)
!84 = !DILocation(line: 88, column: 16, scope: !6)
!85 = !DILocation(line: 53, column: 8, scope: !13, inlinedAt: !86)
!86 = distinct !DILocation(line: 89, column: 16, scope: !6)
!87 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !86)
!88 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !86)
!89 = !DILocation(line: 91, column: 14, scope: !6)
!90 = !DILocation(line: 92, column: 10, scope: !6)
!91 = !DILocation(line: 94, column: 19, scope: !6)
!92 = !DILocation(line: 94, column: 41, scope: !6)
!93 = !DILocation(line: 95, column: 18, scope: !6)
!94 = !DILocation(line: 95, column: 21, scope: !6)
!95 = !DILocation(line: 95, column: 17, scope: !6)
!96 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !97)
!97 = distinct !DILocation(line: 96, column: 16, scope: !6)
!98 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !97)
!99 = !DILocation(line: 98, column: 27, scope: !6)
!100 = !DILocation(line: 17, column: 4, scope: !16, inlinedAt: !23)
!101 = !DILocation(line: 20, column: 14, scope: !16, inlinedAt: !23)
!102 = !DILocation(line: 20, column: 8, scope: !16, inlinedAt: !23)
!103 = !DILocation(line: 24, column: 14, scope: !16, inlinedAt: !23)
!104 = !DILocation(line: 24, column: 12, scope: !16, inlinedAt: !23)
!105 = !DILocation(line: 25, column: 8, scope: !16, inlinedAt: !23)
!106 = !DILocation(line: 25, column: 15, scope: !16, inlinedAt: !23)
!107 = !DILocation(line: 25, column: 21, scope: !16, inlinedAt: !23)
!108 = !DILocation(line: 25, column: 26, scope: !16, inlinedAt: !23)
!109 = !DILocation(line: 25, column: 42, scope: !16, inlinedAt: !23)
!110 = !DILocation(line: 29, column: 1, scope: !16, inlinedAt: !23)
!111 = !DILocation(line: 99, column: 17, scope: !6)
!112 = !DILocation(line: 53, column: 8, scope: !13, inlinedAt: !113)
!113 = distinct !DILocation(line: 100, column: 16, scope: !6)
!114 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !113)
!115 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !113)
!116 = !DILocation(line: 102, column: 14, scope: !6)
!117 = !DILocation(line: 103, column: 10, scope: !6)
!118 = !DILocation(line: 105, column: 19, scope: !6)
!119 = !DILocation(line: 105, column: 41, scope: !6)
!120 = !DILocation(line: 106, column: 18, scope: !6)
!121 = !DILocation(line: 106, column: 21, scope: !6)
!122 = !DILocation(line: 106, column: 17, scope: !6)
!123 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !124)
!124 = distinct !DILocation(line: 107, column: 16, scope: !6)
!125 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !124)
!126 = !DILocation(line: 109, column: 27, scope: !6)
!127 = !DILocation(line: 17, column: 4, scope: !16, inlinedAt: !21)
!128 = !DILocation(line: 20, column: 14, scope: !16, inlinedAt: !21)
!129 = !DILocation(line: 20, column: 8, scope: !16, inlinedAt: !21)
!130 = !DILocation(line: 24, column: 14, scope: !16, inlinedAt: !21)
!131 = !DILocation(line: 24, column: 12, scope: !16, inlinedAt: !21)
!132 = !DILocation(line: 25, column: 8, scope: !16, inlinedAt: !21)
!133 = !DILocation(line: 25, column: 15, scope: !16, inlinedAt: !21)
!134 = !DILocation(line: 25, column: 21, scope: !16, inlinedAt: !21)
!135 = !DILocation(line: 25, column: 26, scope: !16, inlinedAt: !21)
!136 = !DILocation(line: 25, column: 42, scope: !16, inlinedAt: !21)
!137 = !DILocation(line: 29, column: 1, scope: !16, inlinedAt: !21)
!138 = !DILocation(line: 110, column: 17, scope: !6)
!139 = !DILocation(line: 53, column: 8, scope: !13, inlinedAt: !140)
!140 = distinct !DILocation(line: 111, column: 16, scope: !6)
!141 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !140)
!142 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !140)
!143 = !DILocation(line: 113, column: 14, scope: !6)
!144 = !DILocation(line: 114, column: 10, scope: !6)
!145 = !DILocation(line: 116, column: 19, scope: !6)
!146 = !DILocation(line: 116, column: 41, scope: !6)
!147 = !DILocation(line: 117, column: 28, scope: !6)
!148 = !{!149, !49, i64 16}
!149 = !{!"_ZTS11cmdLineOpts", !49, i64 0, !49, i64 4, !49, i64 8, !49, i64 12, !49, i64 16, !49, i64 20, !49, i64 24, !49, i64 28, !49, i64 32}
!150 = !DILocation(line: 118, column: 14, scope: !6)
!151 = !DILocation(line: 119, column: 10, scope: !6)
!152 = !DILocation(line: 121, column: 19, scope: !6)
!153 = !DILocation(line: 121, column: 41, scope: !6)
!154 = !DILocation(line: 122, column: 25, scope: !6)
!155 = !{!149, !49, i64 20}
!156 = !DILocation(line: 123, column: 14, scope: !6)
!157 = !DILocation(line: 124, column: 10, scope: !6)
!158 = !DILocation(line: 125, column: 19, scope: !6)
!159 = !DILocation(line: 125, column: 41, scope: !6)
!160 = !DILocation(line: 126, column: 18, scope: !6)
!161 = !DILocation(line: 126, column: 21, scope: !6)
!162 = !DILocation(line: 126, column: 17, scope: !6)
!163 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !164)
!164 = distinct !DILocation(line: 127, column: 16, scope: !6)
!165 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !164)
!166 = !DILocation(line: 129, column: 27, scope: !6)
!167 = !DILocation(line: 17, column: 4, scope: !16, inlinedAt: !19)
!168 = !DILocation(line: 20, column: 14, scope: !16, inlinedAt: !19)
!169 = !DILocation(line: 20, column: 8, scope: !16, inlinedAt: !19)
!170 = !DILocation(line: 24, column: 14, scope: !16, inlinedAt: !19)
!171 = !DILocation(line: 24, column: 12, scope: !16, inlinedAt: !19)
!172 = !DILocation(line: 25, column: 8, scope: !16, inlinedAt: !19)
!173 = !DILocation(line: 25, column: 15, scope: !16, inlinedAt: !19)
!174 = !DILocation(line: 25, column: 21, scope: !16, inlinedAt: !19)
!175 = !DILocation(line: 25, column: 26, scope: !16, inlinedAt: !19)
!176 = !DILocation(line: 25, column: 42, scope: !16, inlinedAt: !19)
!177 = !DILocation(line: 29, column: 1, scope: !16, inlinedAt: !19)
!178 = !DILocation(line: 130, column: 17, scope: !6)
!179 = !DILocation(line: 53, column: 8, scope: !13, inlinedAt: !180)
!180 = distinct !DILocation(line: 131, column: 16, scope: !6)
!181 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !180)
!182 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !180)
!183 = !DILocation(line: 133, column: 14, scope: !6)
!184 = !DILocation(line: 134, column: 10, scope: !6)
!185 = !DILocation(line: 135, column: 19, scope: !6)
!186 = !DILocation(line: 135, column: 41, scope: !6)
!187 = !DILocation(line: 136, column: 18, scope: !6)
!188 = !DILocation(line: 136, column: 21, scope: !6)
!189 = !DILocation(line: 136, column: 17, scope: !6)
!190 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !191)
!191 = distinct !DILocation(line: 137, column: 16, scope: !6)
!192 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !191)
!193 = !DILocation(line: 139, column: 27, scope: !6)
!194 = !DILocation(line: 17, column: 4, scope: !16, inlinedAt: !17)
!195 = !DILocation(line: 20, column: 14, scope: !16, inlinedAt: !17)
!196 = !DILocation(line: 20, column: 8, scope: !16, inlinedAt: !17)
!197 = !DILocation(line: 24, column: 14, scope: !16, inlinedAt: !17)
!198 = !DILocation(line: 24, column: 12, scope: !16, inlinedAt: !17)
!199 = !DILocation(line: 25, column: 8, scope: !16, inlinedAt: !17)
!200 = !DILocation(line: 25, column: 15, scope: !16, inlinedAt: !17)
!201 = !DILocation(line: 25, column: 21, scope: !16, inlinedAt: !17)
!202 = !DILocation(line: 25, column: 26, scope: !16, inlinedAt: !17)
!203 = !DILocation(line: 25, column: 42, scope: !16, inlinedAt: !17)
!204 = !DILocation(line: 29, column: 1, scope: !16, inlinedAt: !17)
!205 = !DILocation(line: 140, column: 17, scope: !6)
!206 = !DILocation(line: 53, column: 8, scope: !13, inlinedAt: !207)
!207 = distinct !DILocation(line: 141, column: 16, scope: !6)
!208 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !207)
!209 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !207)
!210 = !DILocation(line: 143, column: 14, scope: !6)
!211 = !DILocation(line: 144, column: 10, scope: !6)
!212 = !DILocation(line: 146, column: 19, scope: !6)
!213 = !DILocation(line: 146, column: 41, scope: !6)
!214 = !DILocation(line: 53, column: 8, scope: !13, inlinedAt: !215)
!215 = distinct !DILocation(line: 150, column: 13, scope: !6)
!216 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !215)
!217 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !215)
!218 = !DILocation(line: 152, column: 14, scope: !6)
!219 = !DILocation(line: 153, column: 10, scope: !6)
!220 = !DILocation(line: 155, column: 19, scope: !6)
!221 = !DILocation(line: 155, column: 41, scope: !6)
!222 = !DILocation(line: 156, column: 37, scope: !6)
!223 = !DILocation(line: 156, column: 13, scope: !6)
!224 = !DILocation(line: 160, column: 13, scope: !6)
!225 = !DILocation(line: 164, column: 13, scope: !6)
!226 = !DILocation(line: 165, column: 37, scope: !6)
!227 = !DILocation(line: 165, column: 13, scope: !6)
!228 = !DILocation(line: 166, column: 72, scope: !6)
!229 = !DILocation(line: 166, column: 13, scope: !6)
!230 = !DILocation(line: 53, column: 8, scope: !13, inlinedAt: !14)
!231 = !DILocation(line: 54, column: 7, scope: !13, inlinedAt: !14)
!232 = !DILocation(line: 58, column: 7, scope: !13, inlinedAt: !14)
!233 = !DILocation(line: 168, column: 10, scope: !6)
!234 = !DILocation(line: 69, column: 15, scope: !6)
!235 = distinct !{!235, !28, !236}
!236 = !DILocation(line: 169, column: 7, scope: !6)
!237 = !DILocation(line: 171, column: 1, scope: !6)
!238 = distinct !DISubprogram(name: "PrintCommandLineOptions", scope: !7, file: !7, line: 31, type: !8, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!239 = !DILocation(line: 33, column: 15, scope: !238)
!240 = !DILocation(line: 33, column: 8, scope: !238)
!241 = !DILocation(line: 35, column: 7, scope: !238)
!242 = !DILocation(line: 36, column: 7, scope: !238)
!243 = !DILocation(line: 37, column: 7, scope: !238)
!244 = !DILocation(line: 38, column: 7, scope: !238)
!245 = !DILocation(line: 39, column: 7, scope: !238)
!246 = !DILocation(line: 40, column: 7, scope: !238)
!247 = !DILocation(line: 41, column: 7, scope: !238)
!248 = !DILocation(line: 42, column: 7, scope: !238)
!249 = !DILocation(line: 43, column: 7, scope: !238)
!250 = !DILocation(line: 44, column: 7, scope: !238)
!251 = !DILocation(line: 45, column: 7, scope: !238)
!252 = !DILocation(line: 46, column: 7, scope: !238)
!253 = !DILocation(line: 47, column: 7, scope: !238)
!254 = !DILocation(line: 48, column: 4, scope: !238)
!255 = !DILocation(line: 49, column: 1, scope: !238)
!256 = distinct !DISubprogram(name: "VerifyAndWriteFinalOutput", scope: !7, file: !7, line: 175, type: !8, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!257 = !DILocation(line: 184, column: 17, scope: !256)
!258 = !DILocation(line: 412, column: 44, scope: !259, inlinedAt: !261)
!259 = distinct !DISubprogram(name: "cycle", scope: !260, file: !260, line: 412, type: !8, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!260 = !DIFile(filename: "lulesh.h", directory: "/g/g15/bolet1/workspace/lulesh-region-fix-correct/LULESH")
!261 = distinct !DILocation(line: 185, column: 51, scope: !256)
!262 = !DILocation(line: 185, column: 51, scope: !256)
!263 = !DILocation(line: 185, column: 64, scope: !256)
!264 = !DILocation(line: 185, column: 68, scope: !256)
!265 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !268)
!266 = distinct !DISubprogram(name: "operator<<<std::char_traits<char> >", scope: !267, file: !267, line: 565, type: !8, scopeLine: 566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!267 = !DIFile(filename: "/opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9/../../../../include/c++/9/ostream", directory: "")
!268 = distinct !DILocation(line: 189, column: 14, scope: !256)
!269 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !270)
!270 = distinct !DILocation(line: 190, column: 14, scope: !256)
!271 = !DILocation(line: 190, column: 46, scope: !256)
!272 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !273)
!273 = distinct !DILocation(line: 190, column: 58, scope: !256)
!274 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !275)
!275 = distinct !DILocation(line: 191, column: 14, scope: !256)
!276 = !DILocation(line: 191, column: 46, scope: !256)
!277 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !278)
!278 = distinct !DILocation(line: 191, column: 58, scope: !256)
!279 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !280)
!280 = distinct !DILocation(line: 192, column: 14, scope: !256)
!281 = !DILocation(line: 192, column: 56, scope: !256)
!282 = !DILocation(line: 192, column: 46, scope: !256)
!283 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !284)
!284 = distinct !DILocation(line: 192, column: 64, scope: !256)
!285 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !286)
!286 = distinct !DILocation(line: 193, column: 14, scope: !256)
!287 = !DILocation(line: 132, column: 7, scope: !288, inlinedAt: !289)
!288 = distinct !DISubprogram(name: "operator<<", scope: !267, file: !267, line: 127, type: !8, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!289 = distinct !DILocation(line: 194, column: 14, scope: !256)
!290 = !{!291, !291, i64 0}
!291 = !{!"vtable pointer", !33, i64 0}
!292 = !DILocation(line: 672, column: 24, scope: !293, inlinedAt: !295)
!293 = distinct !DISubprogram(name: "setf", scope: !294, file: !294, line: 670, type: !8, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!294 = !DIFile(filename: "/opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9/../../../../include/c++/9/bits/ios_base.h", directory: "")
!295 = distinct !DILocation(line: 1058, column: 12, scope: !296, inlinedAt: !297)
!296 = distinct !DISubprogram(name: "scientific", scope: !294, file: !294, line: 1056, type: !8, scopeLine: 1057, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!297 = distinct !DILocation(line: 132, column: 2, scope: !288, inlinedAt: !289)
!298 = !DILocation(line: 104, column: 18, scope: !299, inlinedAt: !300)
!299 = distinct !DISubprogram(name: "operator&=", scope: !294, file: !294, line: 103, type: !8, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!300 = distinct !DILocation(line: 673, column: 16, scope: !293, inlinedAt: !295)
!301 = !{!302, !302, i64 0}
!302 = !{!"_ZTSSt13_Ios_Fmtflags", !32, i64 0}
!303 = !DILocation(line: 84, column: 48, scope: !304, inlinedAt: !305)
!304 = distinct !DISubprogram(name: "operator&", scope: !294, file: !294, line: 83, type: !8, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!305 = distinct !DILocation(line: 104, column: 22, scope: !299, inlinedAt: !300)
!306 = !DILocation(line: 88, column: 48, scope: !307, inlinedAt: !308)
!307 = distinct !DISubprogram(name: "operator|", scope: !294, file: !294, line: 87, type: !8, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!308 = distinct !DILocation(line: 100, column: 22, scope: !309, inlinedAt: !310)
!309 = distinct !DISubprogram(name: "operator|=", scope: !294, file: !294, line: 99, type: !8, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!310 = distinct !DILocation(line: 674, column: 16, scope: !293, inlinedAt: !295)
!311 = !DILocation(line: 100, column: 16, scope: !309, inlinedAt: !310)
!312 = !DILocation(line: 210, column: 7, scope: !313, inlinedAt: !315)
!313 = distinct !DISubprogram(name: "operator<<<char, std::char_traits<char> >", scope: !314, file: !314, line: 208, type: !8, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!314 = !DIFile(filename: "/opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9/../../../../include/c++/9/iomanip", directory: "")
!315 = distinct !DILocation(line: 194, column: 33, scope: !256)
!316 = !DILocation(line: 707, column: 26, scope: !317, inlinedAt: !318)
!317 = distinct !DISubprogram(name: "precision", scope: !294, file: !294, line: 705, type: !8, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!318 = distinct !DILocation(line: 210, column: 12, scope: !313, inlinedAt: !315)
!319 = !DILocation(line: 708, column: 20, scope: !317, inlinedAt: !318)
!320 = !{!321, !322, i64 8}
!321 = !{!"_ZTSSt8ios_base", !322, i64 8, !322, i64 16, !302, i64 24, !323, i64 28, !323, i64 32, !31, i64 40, !324, i64 48, !32, i64 64, !49, i64 192, !31, i64 200, !325, i64 208}
!322 = !{!"long", !32, i64 0}
!323 = !{!"_ZTSSt12_Ios_Iostate", !32, i64 0}
!324 = !{!"_ZTSNSt8ios_base6_WordsE", !31, i64 0, !322, i64 8}
!325 = !{!"_ZTSSt6locale", !31, i64 0}
!326 = !DILocation(line: 240, column: 7, scope: !327, inlinedAt: !328)
!327 = distinct !DISubprogram(name: "operator<<<char, std::char_traits<char> >", scope: !314, file: !314, line: 238, type: !8, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!328 = distinct !DILocation(line: 195, column: 14, scope: !256)
!329 = !DILocation(line: 730, column: 26, scope: !330, inlinedAt: !331)
!330 = distinct !DISubprogram(name: "width", scope: !294, file: !294, line: 728, type: !8, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!331 = distinct !DILocation(line: 240, column: 12, scope: !327, inlinedAt: !328)
!332 = !DILocation(line: 731, column: 16, scope: !330, inlinedAt: !331)
!333 = !{!321, !322, i64 16}
!334 = !DILocation(line: 1043, column: 25, scope: !335, inlinedAt: !337)
!335 = distinct !DISubprogram(name: "operator[]", scope: !336, file: !336, line: 1040, type: !8, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!336 = !DIFile(filename: "/opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9/../../../../include/c++/9/bits/stl_vector.h", directory: "")
!337 = distinct !DILocation(line: 337, column: 45, scope: !338, inlinedAt: !339)
!338 = distinct !DISubprogram(name: "e", scope: !260, file: !260, line: 337, type: !8, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!339 = distinct !DILocation(line: 195, column: 41, scope: !256)
!340 = !{!341, !31, i64 0}
!341 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !31, i64 0, !31, i64 8, !31, i64 16}
!342 = !DILocation(line: 195, column: 41, scope: !256)
!343 = !{!344, !344, i64 0}
!344 = !{!"double", !32, i64 0}
!345 = !DILocation(line: 221, column: 16, scope: !346, inlinedAt: !347)
!346 = distinct !DISubprogram(name: "operator<<", scope: !267, file: !267, line: 220, type: !8, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!347 = distinct !DILocation(line: 195, column: 31, scope: !256)
!348 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !349)
!349 = distinct !DILocation(line: 195, column: 51, scope: !256)
!350 = !DILocation(line: 201, column: 23, scope: !256)
!351 = !DILocation(line: 201, column: 4, scope: !256)
!352 = !DILocation(line: 0, scope: !335, inlinedAt: !353)
!353 = distinct !DILocation(line: 337, column: 45, scope: !338, inlinedAt: !354)
!354 = distinct !DILocation(line: 203, column: 39, scope: !256)
!355 = !DILocation(line: 0, scope: !256)
!356 = !DILocation(line: 199, column: 13, scope: !256)
!357 = !DILocation(line: 198, column: 11, scope: !256)
!358 = !DILocation(line: 197, column: 13, scope: !256)
!359 = !DILocation(line: 185, column: 38, scope: !256)
!360 = !DILocation(line: 186, column: 44, scope: !256)
!361 = !DILocation(line: 186, column: 43, scope: !256)
!362 = !DILocation(line: 186, column: 73, scope: !256)
!363 = !DILocation(line: 186, column: 72, scope: !256)
!364 = !DILocation(line: 186, column: 60, scope: !256)
!365 = !DILocation(line: 186, column: 59, scope: !256)
!366 = !DILocation(line: 185, column: 60, scope: !256)
!367 = !DILocation(line: 185, column: 59, scope: !256)
!368 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !369)
!369 = distinct !DILocation(line: 215, column: 14, scope: !256)
!370 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !371)
!371 = distinct !DILocation(line: 216, column: 14, scope: !256)
!372 = !DILocation(line: 240, column: 7, scope: !327, inlinedAt: !373)
!373 = distinct !DILocation(line: 216, column: 43, scope: !256)
!374 = !DILocation(line: 730, column: 26, scope: !330, inlinedAt: !375)
!375 = distinct !DILocation(line: 240, column: 12, scope: !327, inlinedAt: !373)
!376 = !DILocation(line: 731, column: 16, scope: !330, inlinedAt: !375)
!377 = !DILocation(line: 221, column: 16, scope: !346, inlinedAt: !378)
!378 = distinct !DILocation(line: 216, column: 60, scope: !256)
!379 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !380)
!380 = distinct !DILocation(line: 216, column: 76, scope: !256)
!381 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !382)
!382 = distinct !DILocation(line: 217, column: 14, scope: !256)
!383 = !DILocation(line: 240, column: 7, scope: !327, inlinedAt: !384)
!384 = distinct !DILocation(line: 217, column: 43, scope: !256)
!385 = !DILocation(line: 730, column: 26, scope: !330, inlinedAt: !386)
!386 = distinct !DILocation(line: 240, column: 12, scope: !327, inlinedAt: !384)
!387 = !DILocation(line: 731, column: 16, scope: !330, inlinedAt: !386)
!388 = !DILocation(line: 221, column: 16, scope: !346, inlinedAt: !389)
!389 = distinct !DILocation(line: 217, column: 60, scope: !256)
!390 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !391)
!391 = distinct !DILocation(line: 217, column: 76, scope: !256)
!392 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !393)
!393 = distinct !DILocation(line: 218, column: 14, scope: !256)
!394 = !DILocation(line: 240, column: 7, scope: !327, inlinedAt: !395)
!395 = distinct !DILocation(line: 218, column: 43, scope: !256)
!396 = !DILocation(line: 730, column: 26, scope: !330, inlinedAt: !397)
!397 = distinct !DILocation(line: 240, column: 12, scope: !327, inlinedAt: !395)
!398 = !DILocation(line: 731, column: 16, scope: !330, inlinedAt: !397)
!399 = !DILocation(line: 221, column: 16, scope: !346, inlinedAt: !400)
!400 = distinct !DILocation(line: 218, column: 60, scope: !256)
!401 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !402)
!402 = distinct !DILocation(line: 218, column: 76, scope: !256)
!403 = !DILocation(line: 221, column: 4, scope: !256)
!404 = !DILocation(line: 686, column: 7, scope: !405, inlinedAt: !406)
!405 = distinct !DISubprogram(name: "unsetf", scope: !294, file: !294, line: 685, type: !8, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!406 = distinct !DILocation(line: 221, column: 14, scope: !256)
!407 = !DILocation(line: 104, column: 18, scope: !299, inlinedAt: !408)
!408 = distinct !DILocation(line: 686, column: 16, scope: !405, inlinedAt: !406)
!409 = !DILocation(line: 84, column: 48, scope: !304, inlinedAt: !410)
!410 = distinct !DILocation(line: 104, column: 22, scope: !299, inlinedAt: !408)
!411 = !DILocation(line: 104, column: 16, scope: !299, inlinedAt: !408)
!412 = !DILocation(line: 210, column: 7, scope: !313, inlinedAt: !413)
!413 = distinct !DILocation(line: 222, column: 14, scope: !256)
!414 = !DILocation(line: 707, column: 26, scope: !317, inlinedAt: !415)
!415 = distinct !DILocation(line: 210, column: 12, scope: !313, inlinedAt: !413)
!416 = !DILocation(line: 708, column: 20, scope: !317, inlinedAt: !415)
!417 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !418)
!418 = distinct !DILocation(line: 223, column: 14, scope: !256)
!419 = !DILocation(line: 240, column: 7, scope: !327, inlinedAt: !420)
!420 = distinct !DILocation(line: 223, column: 45, scope: !256)
!421 = !DILocation(line: 730, column: 26, scope: !330, inlinedAt: !422)
!422 = distinct !DILocation(line: 240, column: 12, scope: !327, inlinedAt: !420)
!423 = !DILocation(line: 731, column: 16, scope: !330, inlinedAt: !422)
!424 = !DILocation(line: 221, column: 16, scope: !346, inlinedAt: !425)
!425 = distinct !DILocation(line: 223, column: 62, scope: !256)
!426 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !427)
!427 = distinct !DILocation(line: 223, column: 78, scope: !256)
!428 = !DILocation(line: 210, column: 7, scope: !313, inlinedAt: !429)
!429 = distinct !DILocation(line: 224, column: 14, scope: !256)
!430 = !DILocation(line: 707, column: 26, scope: !317, inlinedAt: !431)
!431 = distinct !DILocation(line: 210, column: 12, scope: !313, inlinedAt: !429)
!432 = !DILocation(line: 708, column: 20, scope: !317, inlinedAt: !431)
!433 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !434)
!434 = distinct !DILocation(line: 225, column: 14, scope: !256)
!435 = !DILocation(line: 240, column: 7, scope: !327, inlinedAt: !436)
!436 = distinct !DILocation(line: 225, column: 44, scope: !256)
!437 = !DILocation(line: 730, column: 26, scope: !330, inlinedAt: !438)
!438 = distinct !DILocation(line: 240, column: 12, scope: !327, inlinedAt: !436)
!439 = !DILocation(line: 731, column: 16, scope: !330, inlinedAt: !438)
!440 = !DILocation(line: 221, column: 16, scope: !346, inlinedAt: !441)
!441 = distinct !DILocation(line: 225, column: 61, scope: !256)
!442 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !443)
!443 = distinct !DILocation(line: 225, column: 75, scope: !256)
!444 = !DILocation(line: 240, column: 7, scope: !327, inlinedAt: !445)
!445 = distinct !DILocation(line: 226, column: 14, scope: !256)
!446 = !DILocation(line: 730, column: 26, scope: !330, inlinedAt: !447)
!447 = distinct !DILocation(line: 240, column: 12, scope: !327, inlinedAt: !445)
!448 = !DILocation(line: 731, column: 16, scope: !330, inlinedAt: !447)
!449 = !DILocation(line: 221, column: 16, scope: !346, inlinedAt: !450)
!450 = distinct !DILocation(line: 226, column: 31, scope: !256)
!451 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !452)
!452 = distinct !DILocation(line: 226, column: 47, scope: !256)
!453 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !454)
!454 = distinct !DILocation(line: 227, column: 14, scope: !256)
!455 = !DILocation(line: 240, column: 7, scope: !327, inlinedAt: !456)
!456 = distinct !DILocation(line: 227, column: 43, scope: !256)
!457 = !DILocation(line: 730, column: 26, scope: !330, inlinedAt: !458)
!458 = distinct !DILocation(line: 240, column: 12, scope: !327, inlinedAt: !456)
!459 = !DILocation(line: 731, column: 16, scope: !330, inlinedAt: !458)
!460 = !DILocation(line: 227, column: 69, scope: !256)
!461 = !DILocation(line: 221, column: 16, scope: !346, inlinedAt: !462)
!462 = distinct !DILocation(line: 227, column: 60, scope: !256)
!463 = !DILocation(line: 570, column: 2, scope: !266, inlinedAt: !464)
!464 = distinct !DILocation(line: 227, column: 81, scope: !256)
!465 = !DILocation(line: 230, column: 1, scope: !256)
!466 = !DILocation(line: 202, column: 23, scope: !256)
!467 = !DILocation(line: 202, column: 28, scope: !256)
!468 = !DILocation(line: 202, column: 7, scope: !256)
!469 = distinct !{!469, !351, !470}
!470 = !DILocation(line: 212, column: 4, scope: !256)
!471 = !DILocation(line: 203, column: 45, scope: !256)
!472 = !DILocation(line: 1043, column: 34, scope: !335, inlinedAt: !353)
!473 = !DILocation(line: 203, column: 39, scope: !256)
!474 = !DILocation(line: 203, column: 59, scope: !256)
!475 = !DILocation(line: 203, column: 62, scope: !256)
!476 = !DILocation(line: 1043, column: 34, scope: !335, inlinedAt: !477)
!477 = distinct !DILocation(line: 337, column: 45, scope: !338, inlinedAt: !478)
!478 = distinct !DILocation(line: 203, column: 56, scope: !256)
!479 = !DILocation(line: 203, column: 56, scope: !256)
!480 = !DILocation(line: 203, column: 48, scope: !256)
!481 = !DILocation(line: 53, column: 41, scope: !482, inlinedAt: !483)
!482 = distinct !DISubprogram(name: "FABS", scope: !260, file: !260, line: 53, type: !8, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!483 = distinct !DILocation(line: 203, column: 27, scope: !256)
!484 = !DILocation(line: 204, column: 24, scope: !256)
!485 = !DILocation(line: 206, column: 25, scope: !256)
!486 = !DILocation(line: 206, column: 14, scope: !256)
!487 = !DILocation(line: 208, column: 35, scope: !256)
!488 = !DILocation(line: 210, column: 25, scope: !256)
!489 = !DILocation(line: 210, column: 14, scope: !256)
!490 = !DILocation(line: 202, column: 33, scope: !256)
!491 = distinct !{!491, !468, !492}
!492 = !DILocation(line: 211, column: 7, scope: !256)
!493 = distinct !DISubprogram(linkageName: "_GLOBAL__sub_I_lulesh_util.cc", scope: !1, file: !1, type: !8, flags: DIFlagArtificial, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!494 = !DILocation(line: 74, column: 25, scope: !495, inlinedAt: !497)
!495 = distinct !DISubprogram(name: "__cxx_global_var_init", scope: !496, file: !496, line: 74, type: !8, scopeLine: 74, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!496 = !DIFile(filename: "/opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9/../../../../include/c++/9/iostream", directory: "")
!497 = distinct !DILocation(line: 0, scope: !493)
